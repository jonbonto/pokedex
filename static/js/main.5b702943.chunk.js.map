{"version":3,"sources":["context/filter-context.js","components/PokemonList/PokemonList.js","components/PokemonList/Filter.js","components/PokemonList/Header.js","components/PokemonList/index.js","components/pokemon/Info.js","components/pokemon/Abilities.js","components/pokemon/Forms.js","components/pokemon/Stats.js","components/pokemon/Sprites.js","components/pokemon/index.js","App.js","serviceWorker.js","index.js"],"names":["FilterContext","React","createContext","FilterProvider","children","useState","value","filter","setFilter","Provider","useFilter","context","useContext","undefined","Error","baseUrl","fetchPokemons","lastId","a","fetch","res","json","PokemonList","push","useHistory","pokemons","setPokemons","setLastId","loading","setLoading","getMore","setGetMore","useEffect","Array","map","resJson","results","pokemon","slice","length","next","run","loadMore","style","textAlign","marginTop","height","lineHeight","onClick","id","className","itemLayout","dataSource","grid","column","gutter","size","renderItem","item","Item","name","url","background","border","cursor","paragraph","rows","title","active","Option","Select","types","label","Filter","props","placeholder","onChange","allowClear","width","key","Title","Typography","Header","display","justifyContent","alignItems","level","Info","weight","baseExperience","bordered","Abilities","abilities","ability","is_hidden","slot","Forms","forms","form","Stats","stats","stat","base_stat","effort","Sprites","sprites","Object","entries","src","Pokemon","useParams","state","useLocation","setPokemon","md","base_experience","Layout","Content","Footer","App","color","marginBottom","padding","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b702943.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FilterContext = React.createContext()\r\n\r\nfunction FilterProvider({children}) {\r\n  const [filter, setFilter] = React.useState()\r\n\r\n  const value = {\r\n    filter,\r\n    setFilter\r\n  }\r\n  return (\r\n    <FilterContext.Provider value={value}>\r\n        {children}\r\n    </FilterContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useFilter() {\r\n  const context = React.useContext(FilterContext)\r\n  if (context === undefined) {\r\n    throw new Error(`useFilter must be used within a FilterProvider`)\r\n  }\r\n  return context\r\n}\r\n\r\nexport {\r\n  FilterProvider,\r\n  useFilter\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { fetchPokemons } from \"../../fetchMock\";\r\nimport { List, Button, Skeleton } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFilter } from \"../../context/filter-context\";\r\nconst baseUrl = \"https://pokeapi.co/api/v2/\";\r\nconst limit = 20;\r\n\r\nconst fetchPokemons = async (lastId, filter) => {\r\n  if (filter) {\r\n    const res = await fetch(`${baseUrl}type/${filter}`);\r\n    return await res.json();\r\n  } else {\r\n    const res = await fetch(\r\n      `${baseUrl}pokemon?limit=${limit}&offset=${lastId}`\r\n    );\r\n    return await res.json();\r\n  }\r\n};\r\n\r\nexport default function PokemonList() {\r\n  const { filter } = useFilter();\r\n  const { push } = useHistory();\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [lastId, setLastId] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [getMore, setGetMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const run = async () => {\r\n      setLoading(true);\r\n      setPokemons(pokemons => [\r\n        ...pokemons,\r\n        ...[...new Array(limit)].map(() => ({ loading: true }))\r\n      ]);\r\n      try {\r\n        const resJson = await fetchPokemons(lastId, filter);\r\n        if (filter) {\r\n          resJson.results = resJson.pokemon.map(pokemon => pokemon.pokemon);\r\n        }\r\n        if (lastId === 0) {\r\n          setPokemons(resJson.results);\r\n        } else {\r\n          setPokemons(pokemons => [\r\n            ...pokemons.slice(0, pokemons.length - limit),\r\n            ...resJson.results\r\n          ]);\r\n        }\r\n        if (!resJson.next) {\r\n          setGetMore(false);\r\n        }\r\n      } catch (error) {}\r\n      setLoading(false);\r\n    };\r\n    run();\r\n  }, [setPokemons, setLoading, setGetMore, lastId, filter]);\r\n\r\n  useEffect(() => {\r\n    setLastId(0);\r\n    setGetMore(true);\r\n  }, [filter]);\r\n\r\n  const onLoadMore = () => {\r\n    setLastId(id => id + limit);\r\n  };\r\n\r\n  const loadMore =\r\n    getMore && !loading ? (\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          marginTop: 12,\r\n          height: 32,\r\n          lineHeight: \"32px\"\r\n        }}\r\n      >\r\n        <Button onClick={onLoadMore}>loading more</Button>\r\n      </div>\r\n    ) : null;\r\n  return (\r\n    <List\r\n      className=\"demo-loadmore-list\"\r\n      loading={loading && lastId === 0}\r\n      itemLayout=\"horizontal\"\r\n      loadMore={loadMore}\r\n      dataSource={pokemons}\r\n      grid={{\r\n        column: 4,\r\n        gutter: 16\r\n      }}\r\n      size=\"small\"\r\n      renderItem={item => (\r\n        <List.Item\r\n          onClick={() => push(`/pokemon/${item.name}`, { url: item.url })}\r\n          style={{\r\n            background: \"#fff\",\r\n            border: \"1px solid gray\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\"\r\n          }}\r\n        >\r\n          <Skeleton\r\n            paragraph={{ rows: 1 }}\r\n            title={false}\r\n            loading={item.loading}\r\n            active\r\n          >\r\n            <div>{item.name}</div>\r\n          </Skeleton>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Select } from 'antd'\r\nimport { useFilter } from '../../context/filter-context';\r\n\r\nconst { Option } = Select\r\n\r\nconst types = [\r\n  { label: \"normal\" },\r\n  { label: \"fighting\" },\r\n  { label: \"flying\" },\r\n  { label: \"poison\" },\r\n  { label: \"ground\" },\r\n  { label: \"rock\" },\r\n  { label: \"bug\" },\r\n  { label: \"ghost\" },\r\n  { label: \"steel\" },\r\n  { label: \"fire\" },\r\n  { label: \"water\" },\r\n  { label: \"grass\" },\r\n  { label: \"electric\" },\r\n  { label: \"psychic\" },\r\n  { label: \"ice\" },\r\n  { label: \"dragon\" },\r\n  { label: \"dark\" },\r\n  { label: \"fairy\" },\r\n  { label: \"unknown\" },\r\n  { label: \"shadow\" }\r\n];\r\n\r\n\r\nexport default function Filter(props) {\r\n\r\n  const { setFilter } = useFilter()\r\n  return (\r\n    <Select\r\n      placeholder=\"Select type\"\r\n      onChange={(value) => setFilter(value)}\r\n      allowClear={true}\r\n      style={{ width: 300 }}\r\n    >\r\n      {types.map(({label}) => (\r\n        <Option key={label} value={label}>{label}</Option>\r\n      ))}\r\n    </Select>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport Filter from \"./Filter\";\r\nimport { Typography } from \"antd\";\r\nimport { useFilter } from \"../../context/filter-context\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Header() {\r\n  const {filter} = useFilter()\r\n  const title = filter ? `Pokemons with type: ${filter}` : \"All Pokemons\"\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: 'flex-start' }}>\r\n      <Title level={3}>{title}</Title>\r\n      <Filter />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FilterProvider } from \"../../context/filter-context\";\r\nimport PokemonList from \"./PokemonList\";\r\nimport Header from \"./Header\";\r\n\r\n\r\nexport default function() {\r\n  return (\r\n    <FilterProvider>\r\n      <Header />\r\n      <PokemonList />\r\n    </FilterProvider>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport default function Info({name, weight, height, baseExperience}) {\r\n  return (\r\n    <Card title={name} bordered={false}>\r\n      <p>Weight: {weight}</p>\r\n      <p>Height: {height}</p>\r\n      <p>Base Experience: {baseExperience}</p>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport default function Abilities({abilities = []}) {\r\n  return (\r\n    <Card title=\"Abilities\">\r\n      {abilities.map(ability => (\r\n        <>\r\n        <p>{ability.ability.name}</p>\r\n        <p>{ability.is_hidden ? \"Hidden\" : \"Show\"}</p>\r\n        <p>Slot: {ability.slot}</p>\r\n        </>\r\n      ))}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport default function Forms({forms = []}) {\r\n  return (\r\n    <Card title=\"Forms\">\r\n      {forms.map(form => (\r\n        <>\r\n        <p>{form.name}</p>\r\n        </>\r\n      ))}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport default function Stats({stats = []}) {\r\n  return (\r\n    <Card title=\"Stats\">\r\n      {stats.map(stat => (\r\n        <>\r\n        <p>{stat.stat.name}</p>\r\n        <p>Base Stat: {stat.base_stat}</p>\r\n        <p>Effort: {stat.effort}</p>\r\n        </>\r\n      ))}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport default function Sprites({sprites = {}}) {\r\n  return (\r\n    <Card title=\"Sprites\">\r\n      {Object.entries(sprites).map(([kind,url]) => (\r\n        url && <img src={url} />\r\n      ))}\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchPokemon } from \"../../fetchMock\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport Info from \"./Info\";\r\nimport Abilities from \"./Abilities\";\r\nimport Forms from \"./Forms\";\r\nimport Stats from \"./Stats\";\r\nimport Sprites from \"./Sprites\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nexport default function Pokemon() {\r\n  const { name } = useParams();\r\n  const { state } = useLocation();\r\n  const url = state?.url ?? `https://pokeapi.co/api/v2/pokemon/${name}`;\r\n  const [pokemon, setPokemon] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const run = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch(url)\r\n        const resJson = await res.json();\r\n        // const resJson = await fetchPokemon(url);\r\n        setPokemon(resJson);\r\n      } catch (error) {}\r\n      setLoading(false);\r\n    };\r\n    run();\r\n  }, [setPokemon, setLoading, url]);\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[16, 16]}>\r\n        <Col md={16}>\r\n          <Sprites sprites={pokemon.sprites} />\r\n        </Col>\r\n        <Col md={8}>\r\n          <Info {...{ ...pokemon, baseExperience: pokemon.base_experience }} />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[16, 16]}>\r\n        <Col md={12}>\r\n          <Abilities abilities={pokemon.abilities} />\r\n        </Col>\r\n        <Col md={12}>\r\n          <Forms forms={pokemon.forms} />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[16, 16]}>\r\n        <Col md={12}>\r\n          <Stats stats={pokemon.stats} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport PokemonList from \"./components/PokemonList\";\nimport Pokemon from \"./components/pokemon\";\nimport { Layout, Typography } from \"antd\";\n\nconst { Header, Content, Footer } = Layout;\nconst { Title } = Typography\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Header style={{ display: 'flex', alignItems: 'center'}}><Title style={{ color: '#fafafa', marginBottom: 0}}>POKEDEX</Title></Header>\n        <Layout>\n          <Content style={{ padding: '0 50px', marginTop: 64 }}>\n            <Switch>\n              <Route path=\"/pokemon/:name\">\n                <Pokemon />\n              </Route>\n              <Route path=\"/\">\n                <PokemonList />\n              </Route>\n            </Switch>\n          </Content>\n        </Layout>\n        <Footer style={{ textAlign: 'center' }}>2020</Footer>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/antd/dist/antd.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}